==================
Select 1
==================

SELECT 1;

---

(program
 (statement
  (select
   (keyword_select)
   (select_expression
    (literal)))))

==================
Simple select
==================

SELECT * FROM my_table;

---

(program
 (statement
  (select
   (keyword_select)
   (select_expression))
  (from
   (keyword_from)
   (table_expression name: (identifier)))))

==================
Simple select with fields
==================

SELECT id, name FROM my_table;

---

(program
 (statement
  (select
   (keyword_select)
   (select_expression
    (field name: (identifier))
    (field name: (identifier))))
  (from
   (keyword_from)
   (table_expression name: (identifier)))))

==================
Simple select with fields field table alias
==================

SELECT m.id, m.name
FROM my_table m;

---

(program
  (statement
    (select
     (keyword_select)
     (select_expression
      (field 
       table_alias: (identifier)
       name: (identifier))
      (field 
       table_alias: (identifier)
       name: (identifier))))
    (from
     (keyword_from)
     (table_expression
      name: (identifier)
      table_alias: (identifier)))))

==================
Simple select with where
==================

SELECT id
FROM my_table
WHERE id = 4;

---

(program
 (statement
  (select
   (keyword_select)
   (select_expression
    (field 
     name: (identifier))))
  (from
   (keyword_from)
   (table_expression
    name: (identifier))
   (where
    (keyword_where)
    (where_expression
     (predicate
      left: (field name: (identifier))
      right: (literal)))))))

==================
Simple select with order by
==================

SELECT id
FROM my_table
WHERE id > 4
ORDER BY id DESC;

---

(program
 (statement
  (select
   (keyword_select)
   (select_expression
    (field 
     name: (identifier))))
  (from
   (keyword_from)
   (table_expression
    name: (identifier))
   (where
    (keyword_where)
    (where_expression
     (predicate
      left: (field name: (identifier))
      right: (literal))))
   (order_by
    (keyword_order_by)
    (field name: (identifier))
    (direction (keyword_desc))))))

==================
Simple select with limit
==================

SELECT id
FROM my_table
LIMIT 5;

---

(program
 (statement
  (select
   (keyword_select)
   (select_expression
    (field 
     name: (identifier))))
  (from
   (keyword_from)
   (table_expression
    name: (identifier))
   (limit
    (keyword_limit)
    (literal)))))

==================
Simple select with offset
==================

SELECT id
FROM my_table
LIMIT 5
OFFSET 40;

---

(program
 (statement
  (select
   (keyword_select)
   (select_expression
    (field 
     name: (identifier))))
  (from
   (keyword_from)
   (table_expression
    name: (identifier))
   (limit
    (keyword_limit)
    (literal)
    (offset
     (keyword_offset)
     (literal))))))

==================
Functions
==================

SELECT DISTINCT(id)
FROM my_table;
---

(program
 (statement
  (select
   (keyword_select)
   (select_expression
    (function_call
     function_name: (keyword_distinct)
     parameter: (field name: (identifier)))))
  (from
   (keyword_from)
   (table_expression
    name: (identifier)))))

==================
Functions MAX
==================

SELECT MAX(id)
FROM my_table;
---

(program
 (statement
  (select
   (keyword_select)
   (select_expression
    (function_call
     function_name: (keyword_max)
     parameter: (field name: (identifier)))))
  (from
   (keyword_from)
   (table_expression
    name: (identifier)))))

==================
Functions in functions
==================

SELECT COUNT(DISTINCT(id))
FROM my_table;
---

(program
 (statement
  (select
   (keyword_select)
   (select_expression
    (function_call
     function_name: (keyword_count)
     parameter: 
     (function_call
      function_name: (keyword_distinct)
      parameter: (field name: (identifier))))))
  (from
   (keyword_from)
   (table_expression
    name: (identifier)))))

==================
Group by
==================

SELECT other_id, COUNT(name)
FROM my_table
GROUP BY other_id
HAVING other_id > 10;
---

(program
 (statement
  (select
   (keyword_select)
   (select_expression
    (field name: (identifier))
    (function_call
      function_name: (keyword_count)
      parameter: (field name: (identifier)))))
  (from
   (keyword_from)
   (table_expression
    name: (identifier))
   (group_by
    (keyword_group_by)
    (identifier)
    (keyword_having)
    (predicate
     left: (field name: (identifier))
     right: (literal))))))

==================
Joins
==================

SELECT a.id, b.id
FROM my_table a
JOIN my_other_table b
ON a.id = b.a_id
WHERE b.c_id = 4;

---

(program
 (statement
  (select
   (keyword_select)
   (select_expression
    (field 
     table_alias: (identifier)
     name: (identifier))
    (field 
     table_alias: (identifier)
     name: (identifier))))
  (from
   (keyword_from)
   (table_expression
    name: (identifier)
    table_alias: (identifier))
   (join
    (keyword_join)
    (table_expression
     name: (identifier)
     table_alias: (identifier))
    (keyword_on)
    (predicate
     left: (field
      table_alias: (identifier)
      name: (identifier))
     right: (field
      table_alias: (identifier)
      name: (identifier))))
   (where
    (keyword_where)
    (where_expression
     (predicate
      left: (field
       table_alias: (identifier)
       name: (identifier))
      right: (literal)))))))

==================
Complex Predicates
==================

SELECT id
FROM my_table m
WHERE m.id > 4 AND id < 3;

---

(program
 (statement
  (select
   (keyword_select)
   (select_expression
    (field
     name: (identifier))))
  (from
   (keyword_from)
   (table_expression
    name: (identifier)
    table_alias: (identifier))
   (where
    (keyword_where)
    (where_expression
     (predicate
      left: 
       (predicate
        left:
          (field
           table_alias: (identifier)
           name: (identifier))
        right: (literal))
       operator: (keyword_and)
       right: 
        (predicate
          left: (field name: (identifier))
          right: (literal))))))))
