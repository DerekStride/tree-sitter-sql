name: Build/test
on:
  push:
    branches:
      - "main"
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - 'main'
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [macos-latest, ubuntu-latest, windows-2019]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - run: npm install
      - run: npm test
      - run: scripts/test-keywords.sh
  validate_tests:
    runs-on: ["ubuntu-latest"]
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v3
      - run: |
          STATUS=0
          if [[ $(grep -rn --exclude=errors.txt ERROR test/ | wc -l) -gt 0 ]]; then
              echo "Found 'ERROR' in tests: "
              grep -rn --exclude=errors.txt ERROR test/ | cut -f1,2 -d:
              STATUS=1
          fi
          if [[ $(grep -rn --exclude=errors.txt MISSING test/ | wc -l) -gt 0 ]]; then
              echo "Found 'MISSING' in tests: "
              grep -rn --exclude=errors.txt MISSING test/ | cut -f1,2 -d:
              STATUS=1
          fi
          if [[ $(grep -rn --exclude=errors.txt UNEXPECTED test/ | wc -l) -gt 0 ]]; then
              echo "Found 'UNEXPECTED' in tests: "
              grep -rn --exclude=errors.txt UNEXPECTED test/ | cut -f1,2 -d:
              STATUS=1
          fi
          exit $STATUS
